{"version":3,"sources":["Components/Card.js","App.js","index.js"],"names":["Card","shape","num","onCardClick","cardChild","nextPlayer","className","onClick","e","style","fontSize","paddingTop","paddingLeft","App","state","fieldCard","currentPlayer","player1","name","cards","player2","initializeGame","count","loadCard","console","log","player","setTimeout","Math","floor","random","numbers","len","length","num2","number","push","setState","card","preventDefault","alert","target","remove","parentElement","generalMarket","this","map","display","alignItems","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e210828b.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css'\n\nconst Card = ({shape, num, onCardClick, cardChild, nextPlayer}) => {\n    return (\n        <div className=\"card\" onClick={(e)=>onCardClick(e, shape, num, nextPlayer)} >\n\n            <div onClick={(e)=>cardChild(e, shape, num, nextPlayer)} className=\"num\">{num}</div>\n            {\n                shape === 'star'?\n                <div onClick={(e)=>cardChild(e, shape, num, nextPlayer)} style={{fontSize: '5rem', paddingTop: '1rem', paddingLeft:'.6rem'}} className=\"shape\">✮</div>:\n                shape === 'square'?\n                <div onClick={(e)=>cardChild(e, shape, num, nextPlayer)} className=\"shape\">⬛️</div>:\n                shape === 'triangle'?\n                <div onClick={(e)=>cardChild(e, shape, num, nextPlayer)} style={{fontSize: '4.5rem', paddingTop: '.3rem', paddingLeft:'.6rem'}} className=\"shape\">▲</div>:\n                shape === 'circle'?\n                <div onClick={(e)=>cardChild(e, shape, num, nextPlayer)} className=\"shape\">⚫️</div>:\n                shape === 'cross'?\n                <div onClick={(e)=>cardChild(e, shape, num, nextPlayer)} style={{fontSize: '5rem', paddingTop: '1rem'}} className=\"shape\">✙</div>:null\n            }\n            <div onClick={(e)=>cardChild(e, shape, num, nextPlayer)} className=\"num2\">{num}</div>\n\n        </div>\n    );\n};\n\nexport default Card;","import React, { Component } from 'react';\nimport './app.css'\nimport Fade from 'react-reveal/Fade'\nimport Card from './Components/Card'\n\n\n\nclass App extends Component {\n  state = {\n    fieldCard: {\n      shape: 'triangle',\n      num: 4\n    },\n    currentPlayer: 1,\n    player1: {\n      name: 'Ashraf',\n      cards: []\n    },\n    player2: {\n      name: 'Ade',\n      cards: []\n    },\n    cards: [\n       [1,2,3,5,7,10,11,13,14],\n       [1,2,3,4,5,7,8,10,11,12,13,14],\n       [1,2,3,5,7,10,11,13,14],\n       [1,2,3,4,5,7,8,10,11,12,13,14],\n       [1,2,3,4,5,7,8],\n    ]\n\n  }\n\n  componentDidMount(){\n    this.initializeGame()\n    this.setState({currentPlayer: 1})\n  }\n\n  initializeGame = () => {\n    let count = 0\n    for (count; count<5; count++) {\n      this.loadCard(1)\n      this.loadCard(2)\n    }\n\n    console.log(this.state.player1)\n\n\n  }\n\n  loadCard = (player) =>{\n    setTimeout(() => {\n      let num = Math.floor(Math.random()*6)\n    let shapes = ['cross','triangle','square','circle','star']\n\n    const shape = shapes[num]\n\n\n    let numbers = this.state.cards[num]\n    let len = numbers.length\n    let num2 = Math.floor(Math.random()*len)\n\n    const number = numbers[num2]\n\n    console.log(num2, shape, numbers,len,number)\n\n    const player1 = this.state.player1\n    const player2 = this.state.player2\n\n    if (player === 1) {\n      player1.cards.push({\n        shape,\n        num: number\n      })\n  \n      this.setState({\n        player1\n      })\n    } else {\n      player2.cards.push({\n        shape,\n        num: number\n      })\n  \n      this.setState({\n        player2\n      })\n    }\n    }, 1000);\n  }\n\n\n  onCardClick = (card, shape, num, nextPlayer) => {\n    card.preventDefault()\n    \n    if (this.state.currentPlayer === nextPlayer) {\n      alert('not your turn')\n    } else {\n      if (this.state.fieldCard.shape === shape || this.state.fieldCard.num === num) {\n        this.setState({currentPlayer: nextPlayer})\n        card.target.remove()\n        this.setState({\n          fieldCard: {\n            shape,\n            num\n          }\n        })\n      } else {\n        alert('card must be equal')\n      }\n    }\n  }\n\n  cardChild = (e, shape, num, nextPlayer) => {\n\n    if (this.state.currentPlayer === nextPlayer) {\n      console.log('...')\n    } else {\n      if (this.state.fieldCard.shape === shape || this.state.fieldCard.num === num) {\n        e.target.parentElement.remove()\n        this.setState({currentPlayer: nextPlayer})\n      } else {\n        alert('card must be equal')\n      }\n    }\n\n    \n  }\n  \n\n\n  generalMarket = () => {\n    this.loadCard(this.state.currentPlayer)\n    if(this.state.currentPlayer===1){\n      this.setState({currentPlayer: 2})\n    }else{\n      this.setState({currentPlayer: 1})\n    }\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <div className=\"player player1\">\n          {\n            this.state.player1.cards.map(e=>{\n              return  <Card onCardClick={this.onCardClick} cardChild={this.cardChild} shape={e.shape} num={e.num}/>\n            })\n          }\n        </div>\n        <div style={{display: 'flex', alignItems: 'center'}}>\n          <div className=\"field\">\n            <Card nextPlayer={2} shape={this.state.fieldCard.shape} num={this.state.fieldCard.num} />\n          </div>\n          <div className=\"market\">\n            <div className=\"card\" onClick={this.generalMarket} >\n              MARKET\n            </div>\n          </div>\n        </div>\n        <div className=\"player player2\">\n          {\n            this.state.player2.cards.map(e=>{\n              return  <Card nextPlayer={1} onCardClick={this.onCardClick} cardChild={this.cardChild} shape={e.shape} num={e.num}/>\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}